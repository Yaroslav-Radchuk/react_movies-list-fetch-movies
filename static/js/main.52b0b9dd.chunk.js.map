{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","href","imdbID","MoviesList","movies","map","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setMovie","setQuery","isError","setIsError","handleMovie","a","moviesFromServer","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","disabled","length","App","prevState","find","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52b0b9dd.chunk.js","sourcesContent":["import React from 'react';\nimport { MovieData } from '../../types/MovieData';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: MovieData | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movie?.Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${movie?.imdbID}`} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: (MovieData | null)[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie?.imdbID}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=1b52abea';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  addMovie: (movie: MovieData | null) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<MovieData | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [isError, setIsError] = useState(false);\n\n  const handleMovie = async () => {\n    const moviesFromServer = await getMovie(query);\n\n    if (!moviesFromServer.imdbID) {\n      setIsError(true);\n      setMovie(null);\n    } else {\n      setMovie(moviesFromServer);\n      setIsError(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!isError && movie) {\n      addMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n  };\n\n  const add = () => {\n    addMovie(movie);\n    setIsError(false);\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleQuery}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={handleMovie}\n              disabled={!query.length}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={add}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { MovieData } from './types/MovieData';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState<(MovieData | null)[]>([]);\n\n  const addMovie = (movie: MovieData | null) => {\n    setMovie(prevState => {\n      if (prevState.find(newMovie => newMovie?.imdbID === movie?.imdbID)) {\n        return prevState;\n      }\n\n      return [...prevState, movie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}